apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply from: "../buildTypes.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.opay.buildconfig"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res']
        }
    }
    flavorDimensions "stage"//, "mode"//风味维度
    //产品风格
    productFlavors {
//        免费
        free {
            dimension "stage"
            applicationIdSuffix '.free'
//            applicationId 'com.opay.buildconfig.free'
        }

        paid {
            dimension "stage"
            applicationIdSuffix '.paid'
//            applicationId 'com.opay.buildconfig.paid'
        }
//        dev {
//            dimension "mode"
//            applicationIdSuffix '.paid'
////            applicationId 'com.opay.buildconfig.paid'
//        }
    }

    splits {
        // Settings to build multiple APKs based on screen density.
//        依据密度区分包
        density {

            // Enable or disable building multiple APKs.
            enable true
            // Exclude these densities when building multiple APKs.
//            exclude "ldpi", "tvdpi", "xxxhdpi", "xhdpi", "400dpi", "560dpi", "universal"
            reset()
            include "xxxhdpi", "xxhdpi"
//            compatibleScreens 'small', 'normal', 'large', 'xlarge'
        }
        abi {
            enable true
            reset()
//            include "x86", "x86_64"
            include "x86_64", 'armeabi-v7a'
            universalApk true
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore.keystore")
            storePassword "123456"
            keyAlias "alias"
            keyPassword "123456"
        }
    }


//    buildTypes {
//        release {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//        debug{
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//        dev{
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }
}
ext.abiCodes = ['armeabi-v7a': 1, x86: 2, x86_64: 3]
import com.android.build.OutputFile

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android.applicationVariants.all { variant ->
//    variant.outputs.each { output ->
    variant.outputs.all { output ->
        def baseAbiVersionCode =
                project.ext.abiCodes.get(output.getFilter(OutputFile.ABI))
        println("======>>>>output=:" + output + "\nbaseAbiVersionCode=:" + baseAbiVersionCode + "\noutput.outputFile=:" + output.outputFile)
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
            //这里修改apk文件名
            outputFileName = "buildConfig_${output.baseName}-${android.defaultConfig.versionCode}-${android.defaultConfig.versionName}-${releaseTime()}.apk"
//            println("fileName====>" + outputFileName)
            //以下不起作用了
//            output.outputFile = new File(outputFile.parent, fileName)
        }
        if (baseAbiVersionCode != null) {
            output.versionCodeOverride =
                    baseAbiVersionCode * 1000 + variant.versionCode
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':library')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.0.2'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
